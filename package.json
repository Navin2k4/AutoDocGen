{
  "name": "autodocgen",
  "displayName": "AutoDocGen – Intelligent Code Documentation",
  "description": "A modular plugin for automatically generating inline function documentation in source code using local large language models.",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.102.0"
  },
  "categories": [
    "Other"
  ],
  "main": "./out/extension.js",
  "activationEvents": [],
  "contributes": {
    "commands": [
      {
        "command": "autodocgen.runPrompt",
        "title": "AutoDocGen: Run Prompt with Model"
      },
      {
        "command": "autodocgen.debugPrintModel",
        "title": "AutoDocGen: Show Selected Model"
      },
      {
        "command": "autodocgen.scanCurrentFile",
        "title": "AutoDocGen: Document Current File"
      },
      {
        "command": "autodocgen.documentSelection",
        "title": "AutoDocGen: Document Selected Function"
      },
      {
        "command": "autodocgen.resetDocHistory",
        "title": "AutoDocGen: Reset Doc History"
      },
      {
        "command": "autodocgen.selectModel",
        "title": "AutoDocGen: Select LLM Model"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "autodocgen.documentSelection",
          "when": "editorHasSelection",
          "group": "navigation@6"
        }
      ]
    },
    "configuration": {
      "title": "AutoDocGen Settings",
      "properties": {
        "autodocgen.manualMode": {
          "type": "boolean",
          "default": true,
          "description": "Run documentation only via commands (disable autoscan)."
        },
        "autodocgen.availableModels": {
          "type": "array",
          "description": "List of available local LLM models for documentation generation.",
          "default": [
            {
              "name": "deepseek-coder:1.3b",
              "value": "deepseek-coder:1.3b",
              "size": "1.9 GB",
              "performance": "Good performance"
            },
            {
              "name": "phi:2.7b",
              "value": "phi:2.7b",
              "size": "2.1 GB",
              "performance": "Excellent code quality"
            },
            {
              "name": "mistral:7b",
              "value": "mistral:7b",
              "size": "4.2 GB",
              "performance": "High-quality reasoning"
            },
            {
              "name": "codellama:7b",
              "value": "codellama:7b",
              "size": "4 GB",
              "performance": "Best for large context code"
            }
          ]
        },
        "autodocgen.model": {
          "type": "string",
          "default": "deepseek-coder",
          "description": "Select the local LLM to generate documentation. These models run via Ollama and are downloaded/stored locally. Ensure you have sufficient disk space (minimum ~4 GB).",
          "enum": [
            "deepseek-coder",
            "codellama",
            "phi3",
            "starcoder2"
          ],
          "enumDescriptions": [
            "DeepSeek-Coder (6.7B) – ~13 GB – High accuracy on complex code; best for JavaScript, Python, Java.",
            "Code Llama (7B) – ~13 GB – Fast, well-balanced model from Meta, good multi-language support.",
            "Phi-3 Mini (3.8B) – ~4 GB – Small and fast; decent performance for lightweight tasks.",
            "StarCoder2 (3B) – ~4 GB – Moderate quality; small size; multilingual code support."
          ]
        },
        "autodocgen.overwriteExistingDocs": {
          "type": "boolean",
          "default": false,
          "description": "Overwrite any existing documentation blocks rather than skipping."
        },
        "autodocgen.supportedLanguages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "javascript",
            "typescript",
            "python",
            "java"
          ],
          "scope": "machine",
          "description": "Languages supported by AutoDocGen. This setting is read-only and cannot be modified."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc && node out/scripts/copyNonTSFiles.js",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@babel/parser": "^7.28.0",
    "@types/babel__generator": "^7.27.0",
    "@types/babel__traverse": "^7.28.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.102.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "cpx": "^1.5.0",
    "eslint": "^9.25.1",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "@babel/generator": "^7.28.0",
    "@babel/traverse": "^7.28.0"
  }
}